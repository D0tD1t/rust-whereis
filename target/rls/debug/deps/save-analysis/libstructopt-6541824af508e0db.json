{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53],"program":"/home/dotdot/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","structopt","/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=6541824af508e0db","-C","extra-filename=-6541824af508e0db","--out-dir","/home/dotdot/Projects/whereis/target/rls/debug/deps","-L","dependency=/home/dotdot/Projects/whereis/target/rls/debug/deps","--extern","clap=/home/dotdot/Projects/whereis/target/rls/debug/deps/libclap-c0b97c11350536ed.rmeta","--extern","structopt_derive=/home/dotdot/Projects/whereis/target/rls/debug/deps/libstructopt_derive-cdf7695d992ff807.so","--cap-lints","allow","--error-format=json","--sysroot","/home/dotdot/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,100,111,116,100,111,116,47,80,114,111,106,101,99,116,115,47,119,104,101,114,101,105,115,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,115,116,114,117,99,116,111,112,116,45,54,53,52,49,56,50,52,97,102,53,48,56,101,48,100,98,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"structopt","disambiguator":[2067421315074063859,3350493803205235651]},"crate_root":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src","external_crates":[{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[853209657226342047,8462664850197014382]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[772178867720458397,10513760593670507587]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17633954781163668134,3962627684191718065]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7858001605524721373,8369385247697161108]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5226771781757675641,11183407964508506038]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[15950205559580256541,6605390554280573401]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[5066653915378193616,7813142097187859454]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[1328488228804362593,9042026925657904388]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[3005442698276396085,7194037300925619286]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[11662190156692096384,12505544175813687064]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":11,"id":{"name":"clap","disambiguator":[8061009911444946018,11031154351519861096]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":12,"id":{"name":"bitflags","disambiguator":[2280885214615112702,12512304114620274195]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":13,"id":{"name":"textwrap","disambiguator":[1347686163728515507,8964921758731138842]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":14,"id":{"name":"unicode_width","disambiguator":[6360304799511507699,7419148536983845416]}},{"file_name":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","num":15,"id":{"name":"structopt_derive","disambiguator":[2333314738713353159,14683831160770793015]}}],"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":370,"byte_end":19347,"line_start":9,"line_end":544,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17749,"byte_end":17750,"line_start":493,"line_end":493,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17834,"byte_end":17835,"line_start":499,"line_end":499,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"App, Error, ArgMatches","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":370,"byte_end":19347,"line_start":9,"line_end":544,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":18}],"decl_id":null,"docs":" This crate defines the `StructOpt` trait and its custom derive.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":370,"byte_end":392,"line_start":9,"line_end":9,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17808,"byte_end":17812,"line_start":498,"line_end":498,"column_start":9,"column_end":13},"name":"clap","qualname":"::clap","value":"/home/dotdot/.cargo/registry/src/github.com-1ecc6299db9ec823/structopt-0.2.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":16}],"decl_id":null,"docs":" Re-export of clap\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":18},"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17910,"byte_end":17919,"line_start":503,"line_end":503,"column_start":11,"column_end":20},"name":"StructOpt","qualname":"::StructOpt","value":"StructOpt","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28}],"decl_id":null,"docs":" A struct that is converted from command line arguments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17976,"byte_end":17980,"line_start":505,"line_end":505,"column_start":8,"column_end":12},"name":"clap","qualname":"::StructOpt::clap","value":"fn <'a, 'b> () -> clap::App<'a, 'b>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Returns the corresponding `clap::App`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18151,"byte_end":18160,"line_start":509,"line_end":509,"column_start":8,"column_end":17},"name":"from_clap","qualname":"::StructOpt::from_clap","value":"fn (&clap::ArgMatches) -> Self","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Creates the struct from `clap::ArgMatches`.  It cannot fail\n with a parameter generated by `clap` by construction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18328,"byte_end":18337,"line_start":513,"line_end":513,"column_start":8,"column_end":17},"name":"from_args","qualname":"::StructOpt::from_args","value":"fn () -> Self","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Gets the struct from the command line arguments.  Print the\n error message and quit the program in case of failure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18599,"byte_end":18608,"line_start":522,"line_end":522,"column_start":8,"column_end":17},"name":"from_iter","qualname":"::StructOpt::from_iter","value":"fn <I> (iter: I) -> Self","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Gets the struct from any iterator such as a `Vec` of your making.\n Print the error message and quit the program in case of failure.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,104,111,109,101,47,100,111,116,100,111,116,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,116,114,117,99,116,111,112,116,45,48,46,50,46,49,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19109,"byte_end":19123,"line_start":536,"line_end":536,"column_start":8,"column_end":22},"name":"from_iter_safe","qualname":"::StructOpt::from_iter_safe","value":"fn <I> (iter: I) -> Result<Self, clap::Error>","parent":{"krate":0,"index":18},"children":[],"decl_id":null,"docs":" Gets the struct from any iterator such as a `Vec` of your making.","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}